 @{
    ViewBag.Title = "PKWJax DUG Chat";
}

@section styles {
    <style type="text/css">
        ul#discussion  {
            list-style-type: none;
        }
        .fade {
            opacity: 0;
            -webkit-transition: opacity 0.15s linear;
            -moz-transition: opacity 0.15s linear;
            -o-transition: opacity 0.15s linear;
            transition: opacity 0.15s linear;
        }
        .fade.in {
            opacity: 1;
        }
    </style>
}

<h2>PKWJaxDUG Chat Signalr Example</h2>

<div class="container">
    <div class="alert alert-warning fade"></div>
    <button id="btnConnect" class="btn btn-primary">Connect</button>

    <div id="currentUsers" class="inline">
        <p>You are not currently connected</p>
    </div>
    
    <span id="isConnected" class="label label-default">Disconnected</span>
    <input type="text" id="message" />
    <input type="button" id="sendmessage" value="Send" class="btn btn-default" /><br /><br />
    <input type="hidden" id="displayname" />
    <div class="panel panel-info">
        <div class="panel-heading">
          <h3 class="panel-title">Your Chat here</h3>
        </div>
        <div class="panel-body pre-scrollable" style="height: 200px">
            <ul id="discussion">
            </ul>
        </div>
    </div>
    
    
</div>

@section scripts {
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.0.0.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--Add script to update the page and send messages.--> 
    <script type="text/javascript">
        var users = [];
        $(document).ready(function () {
            // Declare a proxy to reference the hub. 
            var chat = $.connection.chatHub;
            
            // Create a function that the hub can call to broadcast messages.
            chat.client.broadcastMessage = function (name, message) {
                // Html encode display name and message. 
                var encodedName = $('<div />').text(name).html();
                var encodedMsg = $('<div />').text(message).html();
                // Add the message to the page. 
                $('#discussion').append('<li><strong>' + encodedName
                    + '</strong>:&nbsp;&nbsp;' + encodedMsg + '</li>');
                $(".panel-body").scrollTop($('.panel-body')[0].scrollHeight);
            };

            chat.client.newUserAddedMessage = function (name) {
                $('.alert').text(name + ' just signed on.').addClass('in');
                setTimeout(function () {
                    $('.alert').removeClass('in');
                }, 3000);
                users.push(name);
            };

            chat.client.userRemovedMessage = function (name) {
                users.pop(name);
                $('.alert').text(name + ' just signed out.').addClass('in');
                setTimeout(function () {
                    $('.alert').removeClass('in');
                }, 5000);
                chat.server.getAllChatUsers();
            };

            chat.client.usersInChat = function (usersArray) {
                users = usersArray;
                $("#currentUsers").html('Current users logged in: ');
                $.each(users, function (index, item) {
                    $("#currentUsers").append('<span class="label label-default inline">' + item + '</span>&nbsp;');
                });
            };

            // Set initial focus to message input box.  
            $('#message').focus();
            // Start the connection.
            $("#btnConnect").on("click", function (event) {
                if ($("span#isConnected").text() === "Disconnected")
                {
                    $('#displayname').val(prompt('Enter your name:', ''));
                    $.connection.hub.start().done(function () {
                        $("span#isConnected").removeClass("label-default").addClass("label-success").text("Connected");
                        $("#btnConnect").removeClass("btn-primary").addClass("btn-danger").text("Disconnect");
                        chat.server.addChatUser($('#displayname').val()).done(function () {
                            chat.server.getAllChatUsers();
                        });
                        $('#sendmessage').on("click", function (event) {
                            // Call the Send method on the hub. 
                            chat.server.send($('#displayname').val(), $('#message').val());
                            // Clear text box and reset focus for next comment. 
                            $('#message').val('').focus();
                        });
                    });
                } else {
                    chat.server.removeChatUser($('#displayname').val()).done(function () {
                        $("#currentUsers").html('<p>You are not currently connected</p>');
                        $.connection.hub.stop();
                        $("span#isConnected").removeClass("label-success").addClass("label-default").text("Disconnected");
                        $("#btnConnect").removeClass("btn-danger").addClass("btn-primary").text("Connect");
                        $('#sendmessage').off("click");
                    });
                }
                
            });
            
        });
    </script>
}